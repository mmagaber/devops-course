Last login: Mon Aug 10 15:06:26 on ttys000
You have new mail.
MacBook-Pro-2:~ mohamedelmasry$ git -version
unknown option: -version
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]
MacBook-Pro-2:~ mohamedelmasry$ status
-bash: status: command not found
MacBook-Pro-2:~ mohamedelmasry$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	.489614.padl
	.CFUserTextEncoding
	.Terminal.plist
	.Trash/
	.WebIde100/
	.WebIde80/
	.adobe/
	.bash_history
	.bash_profile
	.bash_profile.save
	.bash_profile.save.1
	.bash_sessions/
	.bashrc
	.composer/
	.config/
	.cups/
	.dropbox/
	.fontconfig/
	.gem/
	.gitconfig
	.gitignore_global
	.hgignore_global
	.idlerc/
	.lesshst
	.list.plist
	.mysql_history
	.nchsoftware/
	.node-gyp/
	.node_repl_history
	.npm/
	.pcloud/
	.putty/
	.ssh/
	.stCommitMsg
	.subversion/
	.v8flags.4.6.85.31.mohamedelmasry.json
	.valet/
	.viminfo
	Applications/
	Caches/
	Creative Cloud Files/
	Desktop/
	Documents/
	Downloads/
	Dropbox/
	Google Drive/
	Library/
	Movies/
	Music/
	Pictures/
	Public/
	PycharmProjects/
	composer.json
	composer.lock
	default-constants.php
	green/
	home-blocks.php
	index.html
	mod_custom.php
	node_modules/
	npm-debug.log
	redq_rental.php
	vendor/
	view.html.php

nothing added to commit but untracked files present (use "git add" to track)
MacBook-Pro-2:~ mohamedelmasry$ clear

MacBook-Pro-2:~ mohamedelmasry$ git init
Reinitialized existing Git repository in /Users/mohamedelmasry/.git/
MacBook-Pro-2:~ mohamedelmasry$ git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
MacBook-Pro-2:~ mohamedelmasry$ cd green
MacBook-Pro-2:green mohamedelmasry$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	modified:   class.txt
	new file:   git command.txt

MacBook-Pro-2:green mohamedelmasry$ git add .
MacBook-Pro-2:green mohamedelmasry$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	modified:   class.txt
	new file:   git command.txt

MacBook-Pro-2:green mohamedelmasry$ git add command.txt
fatal: pathspec 'command.txt' did not match any files
MacBook-Pro-2:green mohamedelmasry$ git commit -m "test commit"
[master 07f229f] test commit
 2 files changed, 9 insertions(+), 8 deletions(-)
 create mode 100644 git command.txt
MacBook-Pro-2:green mohamedelmasry$ git add command.text
fatal: pathspec 'command.text' did not match any files
MacBook-Pro-2:green mohamedelmasry$ ls
class.txt	git command.txt
MacBook-Pro-2:green mohamedelmasry$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	deleted:    git command.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	gitCommand.txt

no changes added to commit (use "git add" and/or "git commit -a")
MacBook-Pro-2:green mohamedelmasry$ add gitCommand.txt
-bash: add: command not found
MacBook-Pro-2:green mohamedelmasry$ git add gitCcommand.txt
fatal: pathspec 'gitCcommand.txt' did not match any files
MacBook-Pro-2:green mohamedelmasry$ git add .
MacBook-Pro-2:green mohamedelmasry$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	renamed:    git command.txt -> gitCommand.txt

MacBook-Pro-2:green mohamedelmasry$ clear

MacBook-Pro-2:green mohamedelmasry$ git init
Reinitialized existing Git repository in /Users/mohamedelmasry/green/.git/
MacBook-Pro-2:green mohamedelmasry$ cd green
-bash: cd: green: No such file or directory
MacBook-Pro-2:green mohamedelmasry$ cd green
-bash: cd: green: No such file or directory
MacBook-Pro-2:green mohamedelmasry$ git -verstion
unknown option: -verstion
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]
MacBook-Pro-2:green mohamedelmasry$ clear







MacBook-Pro-2:green mohamedelmasry$ ls
class.txt	gitCommand.txt
MacBook-Pro-2:green mohamedelmasry$ clear


















MacBook-Pro-2:green mohamedelmasry$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	renamed:    git command.txt -> gitCommand.txt

MacBook-Pro-2:green mohamedelmasry$ git reset HEAD gitCommand.txt
MacBook-Pro-2:green mohamedelmasry$ clear












MacBook-Pro-2:green mohamedelmasry$ cd
MacBook-Pro-2:~ mohamedelmasry$ cd green
MacBook-Pro-2:green mohamedelmasry$ ls
class.txt	gitCommand.txt
MacBook-Pro-2:green mohamedelmasry$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	deleted:    git command.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	gitCommand.txt

MacBook-Pro-2:green mohamedelmasry$ git add gitCommand.txt
MacBook-Pro-2:green mohamedelmasry$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	renamed:    git command.txt -> gitCommand.txt

MacBook-Pro-2:green mohamedelmasry$ git commit -m "secund commit"
[master 053813f] secund commit
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename git command.txt => gitCommand.txt (100%)
MacBook-Pro-2:green mohamedelmasry$ git status
On branch master
nothing to commit, working tree clean
MacBook-Pro-2:green mohamedelmasry$ git remote add origin "https://github.com/mmagaber/devops-course.git"
MacBook-Pro-2:green mohamedelmasry$ git pusg origin master
git: 'pusg' is not a git command. See 'git --help'.

The most similar command is
	push
MacBook-Pro-2:green mohamedelmasry$ git push origin master
Counting objects: 9, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (7/7), done.
Writing objects: 100% (9/9), 992 bytes | 330.00 KiB/s, done.
Total 9 (delta 0), reused 0 (delta 0)
To https://github.com/mmagaber/devops-course.git
 * [new branch]      master -> master
MacBook-Pro-2:green mohamedelmasry$ git status
On branch master
nothing to commit, working tree clean
MacBook-Pro-2:green mohamedelmasry$ clean
-bash: clean: command not found
MacBook-Pro-2:green mohamedelmasry$ clean
-bash: clean: command not found
MacBook-Pro-2:green mohamedelmasry$ clear

MacBook-Pro-2:green mohamedelmasry$ git staus
git: 'staus' is not a git command. See 'git --help'.

The most similar command is
	status
MacBook-Pro-2:green mohamedelmasry$ git status
On branch master
nothing to commit, working tree clean
MacBook-Pro-2:green mohamedelmasry$ clear































































MacBook-Pro-2:green mohamedelmasry$ cd
MacBook-Pro-2:~ mohamedelmasry$ mkdir testDevOps
MacBook-Pro-2:~ mohamedelmasry$ cd testDevOps
MacBook-Pro-2:testDevOps mohamedelmasry$ git clone https://github.com/mmagaber/devops-course.git
Cloning into 'devops-course'...
remote: Enumerating objects: 9, done.
remote: Counting objects: 100% (9/9), done.
remote: Compressing objects: 100% (7/7), done.
remote: Total 9 (delta 0), reused 9 (delta 0), pack-reused 0
Unpacking objects: 100% (9/9), done.
MacBook-Pro-2:testDevOps mohamedelmasry$ ls
devops-course
MacBook-Pro-2:testDevOps mohamedelmasry$ ls
devops-course
MacBook-Pro-2:testDevOps mohamedelmasry$ nano 4.txt

























































  GNU nano 2.0.6                                                                                 File: 4.txt                                                                                                                                                                Modified  

test file for clone



































































^G Get Help                                   ^O WriteOut                                   ^R Read File                                  ^Y Prev Page                                  ^K Cut Text                                   ^C Cur Pos
^X Exit                                       ^J Justify                                    ^W Where Is                                   ^V Next Page                                  ^U UnCut Text                                 ^T To Spell
